//
// Created by Azazel on 09.10.2020. solved
//
/* В некотором королевстве есть N провинций. Король пожелал объединить все их под своей самодержавной властью. Естественно, чтобы никто не догадался об этих планах, он будет это делать поэтапно, а именно: раз в год он будет объединять какие-то две провинции в одну. Чтобы жителям обеих провинций не было обидно, новому территориальному образованию будет присвоено новое название, которое будет отличаться от обоих старых названий. Естественно, это потребует выпуска новых паспортов для жителей обеих провинций.
Очевидно, что если в первой провинции pi жителей, а во второй – pj жителей, то для них надо выпустить pi+pj новых паспортов.
На следующий год король объединяет еще какие-то две провинции. И так далее, до тех пор пока вся территория королевства не будет объединена в одну большую «провинцию». Определите, какое наименьшее количество новых паспортов придется выпустить, если король будет объединять провинции оптимально с этой точки зрения.

ВХОДНЫЕ ДАННЫЕ
В первой строке вводится число N (натуральное, не превышает 105) – количество провинций. Затем вводится N чисел – количество жителей каждой провинции (натуральное, не превосходит 109). Гарантируется, что изначально в королевстве хотя бы две провинции.

ВЫХОДНЫЕ ДАННЫЕ
Выведите единственное число – количество новых паспортов, которые придется выпустить.
ввод	вывод
2
2 6     8

3
6 2 4   18
*/
#include <iostream>
#include <set>

using namespace std;

int main() {
    uint64_t n, answ = 0;
    cin >> n;
    multiset <uint64_t> arr;
    uint64_t input;
    for (uint64_t i = 0; i < n; ++i) {
        cin >> input;
        arr.insert(input);
    }
    for (uint64_t i = 0; i < n - 1; ++i) {
        uint64_t sum = *arr.begin() + *next(arr.begin());
        arr.erase(arr.begin(), next(arr.begin(), 2));
        arr.insert(sum);
        answ += sum;
    }
    cout << answ;
}